{"0": {
    "doc": "ReadMe",
    "title": "Foundations of Data Science",
    "content": "UC Berkeley . Summer 2023 offering of Data 8: Foundations of Data Science at UC Berkeley. ",
    "url": "http://localhost:4000/su23/README/#foundations-of-data-science",
    "relUrl": "/README/#foundations-of-data-science"
  },"1": {
    "doc": "ReadMe",
    "title": "ReadMe",
    "content": " ",
    "url": "http://localhost:4000/su23/README/",
    "relUrl": "/README/"
  },"2": {
    "doc": "Accommodations",
    "title": "Accommodations and Extensions",
    "content": " ",
    "url": "http://localhost:4000/su23/accommodations/#accommodations-and-extensions",
    "relUrl": "/accommodations/#accommodations-and-extensions"
  },"3": {
    "doc": "Accommodations",
    "title": "Table of Contents",
    "content": ". | DSP Accommodations | Privacy | Wellness Resources | . ",
    "url": "http://localhost:4000/su23/accommodations/#table-of-contents",
    "relUrl": "/accommodations/#table-of-contents"
  },"4": {
    "doc": "Accommodations",
    "title": "DSP Accommodations",
    "content": "We will provide appropriate accommodations to all students enrolled in Berkeley’s Disabled Students Program (DSP). To ensure that you receive the appropriate accommodations, please have your DSP specialist submit a letter confirming your status and accommodations. If you’re not enrolled in DSP, or are in the process of being onboarded by DSP, you may still be eligible for accommodations. We also aim to provide fair and appropriate accommodations to any students who, because of extenuating circumstances, may need them. Please reach out to data8@berkeley.edu if this is the case and our DSP Lead will get back to you. ",
    "url": "http://localhost:4000/su23/accommodations/#dsp-accommodations",
    "relUrl": "/accommodations/#dsp-accommodations"
  },"5": {
    "doc": "Accommodations",
    "title": "Privacy",
    "content": "All DSP and accommodations-related materials for this course are kept in a repository separate from the rest of the course materials that is visible only to the instructors and selected Lead GSIs. For any DSP and accommodations-related communications, please reach out to data8@berkeley.edu and the DSP Lead will get back to you. This inbox will be visible to future members of course staff, so if you ever have a communication that you wish to remain private, let us know and we can delete the email exchange once the conversation is resolved. ",
    "url": "http://localhost:4000/su23/accommodations/#privacy",
    "relUrl": "/accommodations/#privacy"
  },"6": {
    "doc": "Accommodations",
    "title": "Wellness Resources",
    "content": "Your wellbeing matters, and we hope that Data 8 is never a barrier to taking care of your mental and physical health. Below are some campus resources that may be helpful: . | University Health Services | UHS Counseling and Psychological Services (CAPS) | Campus Academic Accommodations Hub | ASUC Student Advocate’s Office | Basic Needs Center | ASUC Mental Health Resources Guide | . ",
    "url": "http://localhost:4000/su23/accommodations/#wellness-resources",
    "relUrl": "/accommodations/#wellness-resources"
  },"7": {
    "doc": "Accommodations",
    "title": "Accommodations",
    "content": " ",
    "url": "http://localhost:4000/su23/accommodations/",
    "relUrl": "/accommodations/"
  },"8": {
    "doc": "Announcements",
    "title": "Announcements",
    "content": "Announcements are stored in the _announcements directory and rendered according to the layout file, _layouts/announcement.html. ",
    "url": "http://localhost:4000/su23/announcements/",
    "relUrl": "/announcements/"
  },"9": {
    "doc": "Announcements",
    "title": "Week 1 Announcements",
    "content": "Jun 12 &middot; 0 min read . | Welcome to Data 8! We are currently busy preparing for the upcoming term that starts on 6/20. | In the meantime (Until official communication channels are published), please visit course policies. | We would like to note that all information is still subject to change. Keep checking back for the latest updates. | Our first lecture will be on Tuesday 6/20 from 10am-11am in Dwinelle 155. | . ",
    "url": "http://localhost:4000/su23/announcements/",
    "relUrl": "/announcements/"
  },"10": {
    "doc": "FAQs",
    "title": "Frequently Asked Questions",
    "content": ". Q: What is the best way to get help in this course? . A: Your best avenues are to go to office hours held by the course staff, or to ask questions on Ed. Course staff will be monitoring Ed frequently and will try to answer your question quickly and thoroughly. Q: Where will our grades for assignments be displayed for the course? . A: Grades will be displayed on Gradescope for the written and autograded portions for all assignments (homeworks, labs, projects, and exams). For homeworks and projects, your total grade is the sum of the autograded portion and the written portion. Q: I passed all the tests when doing my homework/project, but still got points off on the autograded portion of the assignment. Why is this happening? . A: The homeworks and projects have hidden tests that are not visible to students while they do the assignment. In order to pass these hidden tests, you must test your code yourself and make sure your answer is correct. Our tests are not always comprehensive. Q: I have a 0 on Gradescope for a lab that I attended and got checked off. Why is this? . A: You likely did not submit the lab. If you are compliant with the lab credit policies and had submitted the lab assignment, reach out to your lab TA know. Q: I worked with a partner on a project, and they have a grade on Gradescope for the project while I do not. Why is this happening? . A: This is normal. Only one partner should have a grade on Gradescope, but the score will be applied to both partners. Q: I noticed a mistake in the grading of the written portion of my homework. How can I get this fixed? . A: To get this fixed, you must submit a regrade request via Gradescope before the regrade deadline. This is known as the regrade request window. We unfortunately will not accept any regrades after the window has closed. All regrade deadline dates are posted on the same Ed post that releases the assignment grades and solutions. Q: I have some other grading questions. Who should I contact? . A: Please contact your lab TA. ",
    "url": "http://localhost:4000/su23/faq/#frequently-asked-questions",
    "relUrl": "/faq/#frequently-asked-questions"
  },"11": {
    "doc": "FAQs",
    "title": "FAQs",
    "content": " ",
    "url": "http://localhost:4000/su23/faq/",
    "relUrl": "/faq/"
  },"12": {
    "doc": "Home",
    "title": "Data 8: Foundations of Data Science",
    "content": "UC Berkeley, Summer 2023 . Course Captures . ",
    "url": "http://localhost:4000/su23/index.html#data-8-foundations-of-data-science",
    "relUrl": "/index.html#data-8-foundations-of-data-science"
  },"13": {
    "doc": "Home",
    "title": "Announcements",
    "content": " ",
    "url": "http://localhost:4000/su23/index.html#announcements",
    "relUrl": "/index.html#announcements"
  },"14": {
    "doc": "Home",
    "title": "Week 1 Announcements",
    "content": "Jun 12 &middot; 0 min read . | Welcome to Data 8! We are currently busy preparing for the upcoming term that starts on 6/20. | In the meantime (Until official communication channels are published), please visit course policies. | We would like to note that all information is still subject to change. Keep checking back for the latest updates. | Our first lecture will be on Tuesday 6/20 from 10am-11am in Dwinelle 155. | . ",
    "url": "http://localhost:4000/su23/index.html",
    "relUrl": "/index.html"
  },"15": {
    "doc": "Home",
    "title": "Week 1",
    "content": "Jan 18 1 Introduction Slides • Demos • Demos (HTML Only) • Video Reading: 1.1, 1.2, 1.3 Lab Lab 01: Expressions (Due 1/20) Lab 01 Worksheet Jan 20 2 Cause and Effect Slides • Video Reading: 2 Homework Homework 01 (Due 1/25) ",
    "url": "http://localhost:4000/su23/index.html#week-1",
    "relUrl": "/index.html#week-1"
  },"16": {
    "doc": "Home",
    "title": "Week 2",
    "content": "Jan 23 3 Tables Slides • Demos • Demos (HTML Only) • Video Reading: 3 Lab Lab 02: Table Operations (Due 1/27) Lab 02 Worksheet Jan 25 4 Data Types Slides • Demos • Demos (HTML Only) • Video Reading: 4, 5 Jan 27 5 Building Tables Slides • Demos • Blank Demos • Demos (HTML Only) • Video Reading: 6.1, 6.2 Homework Homework 02 (Due 2/1) ",
    "url": "http://localhost:4000/su23/index.html#week-2",
    "relUrl": "/index.html#week-2"
  },"17": {
    "doc": "Home",
    "title": "Week 3",
    "content": "Jan 30 6 Census Slides • Demos • Demos (HTML Only) • Video Reading: 6.3, 6.4 Lab Lab 03: Data Types, Creating and Extending Tables (Due 2/3) Lab 03 Worksheet Feb 1 7 Charts Slides • Demos • Demos (HTML Only) • Video Reading: 7, 7.1 Feb 3 8 Histograms Slides • Demos • Demos (HTML Only) • Video Reading: 7.2, 7.3 Homework Homework 03 (Due 2/8) ",
    "url": "http://localhost:4000/su23/index.html#week-3",
    "relUrl": "/index.html#week-3"
  },"18": {
    "doc": "Home",
    "title": "Week 4",
    "content": "Feb 6 9 Functions Slides • Demos • Demos (HTML Only) • Video Reading: 8, 8.1 Lab Lab 04: Functions and Visualization (Due 2/10) Lab 04 Worksheet Feb 8 10 Groups Slides • Demos • Blank Demos • Demos (HTML Only) • Video Reading: 8.2, 8.3 Feb 10 11 Pivots and Joins Slides • Demos • Blank Demos• Demos (HTML Only) • Video Reading: 8.4 Homework Homework 04 (Due 2/15) Project Project 1: World Population and Poverty (Due 2/24, Checkpoint 2/17) ",
    "url": "http://localhost:4000/su23/index.html#week-4",
    "relUrl": "/index.html#week-4"
  },"19": {
    "doc": "Home",
    "title": "Week 5",
    "content": "Feb 13 12 Table Examples Slides • Demos • Demos (HTML Only) • Video Reading: 8.5 Project 1 Lab Worksheet Feb 15 13 Conditionals and Iteration Slides • Demos • Blank Demos • Demos (HTML Only) • Video Reading: 9, 9.1, 9.2 Feb 17 14 Chance Slides • Demos • Demos (HTML Only) • Video Reading: 9.2, 9.3, 9.4 Homework Homework 05 (Due 2/22) ",
    "url": "http://localhost:4000/su23/index.html#week-5",
    "relUrl": "/index.html#week-5"
  },"20": {
    "doc": "Home",
    "title": "Week 6",
    "content": "Feb 20 Holiday: No Class Lab Lab 05: Conditional Statements, Iteration, Tables (Due 2/24) Lab 05 Worksheet Feb 22 15 Sampling Slides • Demos • Demos (HTML Only) • Video Reading: 9.5, 10 Feb 24 16 Models Slides • Demos • Demos (HTML Only) • Video Reading: 10.2, 10.3, 10.4 Homework Homework 06 (Due 3/1) ",
    "url": "http://localhost:4000/su23/index.html#week-6",
    "relUrl": "/index.html#week-6"
  },"21": {
    "doc": "Home",
    "title": "Week 7",
    "content": "Feb 27 17 Comparing Distributions Slides • Demos • Demos (HTML Only) • Video Reading: 11.1, 11.2 Lab Lab 06: Assessing Models (Due 3/3) Lab 06 Worksheet Mar 1 18 Decisions and Uncertainty Slides • Demos • Demos (HTML Only) • Video Reading: 11.3, 11.4 Mar 3 19 A/B Testing Slides • Demos • Demos (HTML Only) • Video Reading: 11.4, 12.1 Homework Homework 07 (Due 3/8) ",
    "url": "http://localhost:4000/su23/index.html#week-7",
    "relUrl": "/index.html#week-7"
  },"22": {
    "doc": "Home",
    "title": "Week 8",
    "content": "Mar 6 20 Causality Slides • Demos • Demos (HTML Only) • Video Reading: 12.2 Midterm Review Worksheet Mar 8 21 Examples Slides • Demos • Demos (HTML Only) • Video Reading: 12.3 Mar 10 22 Midterm Review Slides • Video Exam Midterm (7 - 9 PM) ",
    "url": "http://localhost:4000/su23/index.html#week-8",
    "relUrl": "/index.html#week-8"
  },"23": {
    "doc": "Home",
    "title": "Week 9",
    "content": "Mar 13 23 Confidence Intervals Slides • Demos • Demos Empty • Demos (HTML Only) • Video Reading: 13, 13.1, 13.2 Lab Lab 07: A/B Testing (Due 3/17) Lab 07 Worksheet Mar 15 24 Interpreting Confidence Slides • Demos • Demos Empty • Demos (HTML Only) • Video Reading: 13.3, 13.4 Mar 17 25 Center and Spread Slides • Demos • Demos (HTML Only) • Video Reading: 14, 14.1, 14.2 Homework Homework 08 (3/22) ",
    "url": "http://localhost:4000/su23/index.html#week-9",
    "relUrl": "/index.html#week-9"
  },"24": {
    "doc": "Home",
    "title": "Week 10",
    "content": "Mar 20 26 The Normal Distribution Slides • Demos • Demos (HTML Only) • Video Reading: 14.3, 14.4 Lab Lab 08: Sample Means (Due 3/24) Lab 08 Worksheet Mar 22 27 Sample Means Slides • Demos • Demos (HTML Only) • Video Reading: 14.5 Mar 24 28 Designing Experiments Slides • Demos • Demos (HTML Only) •Video Reading: 14.6 Homework Homework 09 (Due 4/5) Project Project 2: Climate (Due 4/14, Checkpoint 4/7) ",
    "url": "http://localhost:4000/su23/index.html#week-10",
    "relUrl": "/index.html#week-10"
  },"25": {
    "doc": "Home",
    "title": "Spring Break",
    "content": "Mar 27 Spring Break: No Class Mar 29 Spring Break: No Class Mar 31 Spring Break: No Class ",
    "url": "http://localhost:4000/su23/index.html#spring-break",
    "relUrl": "/index.html#spring-break"
  },"26": {
    "doc": "Home",
    "title": "Week 12",
    "content": "Apr 3 29 Correlation Slides • Demos • Demos (HTML Only) • Video Reading: 15, 15.1 Project 2 Lab Worksheet Apr 5 30 Linear Regression Slides • Demos • Demos Blank • Demos (HTML Only) • Video Reading: 15.2 Apr 7 31 Least Squares Slides • Demos • Demos (HTML Only) • Video Reading: 15.3, 15.4 Homework Homework 10 (Due 4/12) ",
    "url": "http://localhost:4000/su23/index.html#week-12",
    "relUrl": "/index.html#week-12"
  },"27": {
    "doc": "Home",
    "title": "Week 13",
    "content": "Apr 10 32 Guest Lecture: DJ Patil (US Chief Data Scientist under the Obama Administration) Intro Slides • Video Lab Lab 09: Regression (Due 4/14) Lab 09 Worksheet Apr 12 33 Residuals Slides • Demos • Video Reading: 15.5, 15.6 Apr 14 34 Regression Inference Slides • Demos • Demos (HTML Only) • Video Reading: 16 Homework Homework 11 (Due 4/19) Project Project 3: Classifying Movies (Due 4/28, Checkpoint 4/21) ",
    "url": "http://localhost:4000/su23/index.html#week-13",
    "relUrl": "/index.html#week-13"
  },"28": {
    "doc": "Home",
    "title": "Week 14",
    "content": "Apr 17 35 Updating Probabilities Slides • Demos • Demos (HTML Only) • Video Reading: 13, 18 Project 3 Lab Worksheet Apr 19 36 Classification Slides • Demos • Video Reading: 17, 17.1, 17.2, 17.3 Apr 21 37 Classifiers Slides • Demos • Video Reading: 17.4 Homework Homework 12 (Due 4/26) ",
    "url": "http://localhost:4000/su23/index.html#week-14",
    "relUrl": "/index.html#week-14"
  },"29": {
    "doc": "Home",
    "title": "Week 15",
    "content": "Apr 24 38 Case Study: Tech Slides • Video Lab Lab 10: Conditional Probability (Due 4/28) Lab 10 Worksheet Apr 26 39 Conclusion Slides • Video Apr 28 40 Review Session Homework Homework 13 (Due 5/7) ",
    "url": "http://localhost:4000/su23/index.html#week-15",
    "relUrl": "/index.html#week-15"
  },"30": {
    "doc": "Home",
    "title": "Final",
    "content": "May 9 Exam Final Exam (3-6 PM) . Toggle Dark Mode . The Data 8 Website Dark Mode&trade; is in beta. You can provide feedback about the website here . ",
    "url": "http://localhost:4000/su23/index.html#final",
    "relUrl": "/index.html#final"
  },"31": {
    "doc": "Home",
    "title": "Home",
    "content": " ",
    "url": "http://localhost:4000/su23/index.html",
    "relUrl": "/index.html"
  },"32": {
    "doc": "Office Hours",
    "title": "Office Hours",
    "content": "You are welcome to show up to any office hours. Please see the calendar for OH times and locations. We use an online sign-up system to help keep track of everyone. If you need help during your lab section, please utilize the lab queue instead so that the lab TAs can see your help request! . ",
    "url": "http://localhost:4000/su23/officehours/",
    "relUrl": "/officehours/"
  },"33": {
    "doc": "Office Hours",
    "title": "Office Hours Calendar",
    "content": " ",
    "url": "http://localhost:4000/su23/officehours/#office-hours-calendar",
    "relUrl": "/officehours/#office-hours-calendar"
  },"34": {
    "doc": "Policies",
    "title": "Policies",
    "content": " ",
    "url": "http://localhost:4000/su23/policies/",
    "relUrl": "/policies/"
  },"35": {
    "doc": "Policies",
    "title": "Table of Contents",
    "content": ". | About the Course . | Course Description | Prerequisites | Materials &amp; Resources | Support | . | Course Components . | Live Lecture | Labs | Homework and Projects | Exams | . | Grades . | Grade Bins | Regrades | . | Assignments . | Submitting Assignments | Late Submission | Assignment Extensions | Learning Cooperatively | . | Academic Honesty | A Parting Thought | . ",
    "url": "http://localhost:4000/su23/policies/#table-of-contents",
    "relUrl": "/policies/#table-of-contents"
  },"36": {
    "doc": "Policies",
    "title": "About the Course",
    "content": "Course Description . Foundations of Data Science combines three perspectives: inferential thinking, computational thinking, and real-world relevance. Given data arising from some real-world phenomenon, how does one analyze that data so as to understand that phenomenon? The course teaches critical concepts and skills in computer programming and statistical inference, in conjunction with hands-on analysis of real-world datasets, including economic data, document collections, geographical data, and social networks. It also delves into social issues surrounding data analysis such as privacy and study design. Prerequisites . The curriculum and format is designed specifically for students who have not previously taken statistics or computer science courses. Students with some prior experience in either statistics or computing are welcome to enroll and often find that this course offers a new perspective that blends computational and inferential thinking. Students who have taken several statistics or computer science courses should instead take a more advanced course like Data 100. Materials &amp; Resources . Our primary text is an online book called Computational and Inferential Thinking: The Foundations of Data Science. This text was written for the course by the course instructors. A complete PDF of the textbook can be found in the Student Materials Google Drive. The computing platform for the course is hosted at data8.datahub.berkeley.edu. Students find it convenient to use their own computer for the course. If you do not have adequate access to a personal computer, we can help you borrow a machine; please contact data8@berkeley.edu. Support . You are not alone in this course; the staff and instructors are here to support you as you learn the material. It’s expected that some aspects of the course will take time to master, and the best way to master challenging material is to ask questions. For questions, use Ed. We will also hold in-person and virtual office hours that offer drop-in help on assignments and course material. Your lab TA will be your main point of contact for all course related questions/grade clarifications. The TAs are here to support you so please lean on your lab TA if you need more support in the class or have any questions/concerns. Small-group tutoring sessions will be available for students in need of additional support to develop confidence with core concepts. In past semesters, students who attended have found these sessions to be a great use of their time. Details about sign-ups will be available a few weeks into the term. ",
    "url": "http://localhost:4000/su23/policies/#about-the-course",
    "relUrl": "/policies/#about-the-course"
  },"37": {
    "doc": "Policies",
    "title": "Course Components",
    "content": "Live Lecture . Live lectures will be held on Mondays, Wednesdays, and Fridays starting at 10:10am in Wheeler 150; students may also attend live lectures remotely. Recordings of these sessions will be provided, but students are highly encouraged to attend in real time. Slides and lecture examples will be provided on the course website. Labs . Spring 2023 lab policies are the same as Fall 2022 lab policies, but differ from lab policies from previous semesters. Read this instead of asking former students how labs work. Weekly labs include a discussion worksheet covering recent material and a programming-based lab assignment that develops skills with computational and inferential concepts. Lab assignments will be released on Monday night each week. This semester, we are offering two lab formats: an attendance-based 30-student option called regular lab and a submission-based option called mega lab. Both are designed to help students learn the course material equally well. You can choose which format you want, and can switch options up to the end of the first week of class. Regular Lab . Regular lab meetings are two hours long. The first hour focuses on the discussion worksheet and group problem solving. The second hour is dedicated to completing the programming-based lab assignment. To receive credit for lab, you must attend both parts. If you complete the lab assignment before the lab period is over and get checked off by the course staff, you may leave early and still receive credit. If you stay for the complete lab period, make significant progress on the lab assignment, and get checked off by the course staff, you will receive full credit for the lab even if you haven’t completed the whole lab assignment. Your two lowest lab scores will be dropped, which means that missing up to two lab sections will not affect your grade. If you need to miss more than two, talk to your GSI. You do not need to submit your lab notebook to Gradescope. You will receive full credit for the lab assignment if you are checked off. Your GSI will only check you off if you have either finished the lab notebook or worked until the end of the lab and made substantial progress. Discussion worksheets do not need to be submitted. Regular lab sessions will not be webcast and are not recorded. Mega Lab . Mega lab meetings are (approximately) one hour long. The entire time will focus on the discussion worksheet. There is no enrollment limit and attendance is optional. Students in the mega lab must complete the weekly lab assignment and submit it to Gradescope by 11:00pm Friday. While no class time will be reserved for the lab assignment, there will be dedicated lab office hours on Friday mornings to assist students with completing the lab. Lab assignments include automatic feedback, so completing the lab assignment in full guarantees you a perfect score. Lab assignments are designed to take one hour. Your two lowest lab scores will be dropped. Mega lab sessions will be webcast and recorded. Choosing a Lab Format . First-year students and students without prior programming experience are strongly encouraged to choose a regular lab. Working on programming-based lab assignments in a small classroom with dedicated course staff available to help is a great way to learn. Both options are meant to be great. Mega lab was first piloted last semester and received positive feedback from students. We’ve designed mega lab to appeal to students who learn well from large-format lectures, working independently, and coming to drop-in office hours when they need help. But the regular lab format has clear advantages for students who wish to work with others and get to know the course staff: a guarantee that lab will take exactly 2 hours each week, a dedicated lab GSI, and the peer learning that comes with regularly attending a small weekly section. Homework and Projects . Weekly homework assignments are a required part of the course. You must complete and submit your homework independently, but you are allowed to discuss problems with other students and course staff. See the Learning Cooperatively section below. Homeworks will be released on Thursday and due the following Wednesday night. There are 3 projects throughout the semester. A checkpoint must be reached by the following Friday after the project is released, and the whole project is due by the following Friday after the checkpoint. If you submit a homework or project 24 hours before the deadline or earlier, you will receive 5 bonus points on that assignment. Data science is about analyzing real-world data sets, and so you will also complete three projects involving real data. On each project, you may work with a single partner; your partner must be from the lab you enrolled in. Both partners will receive the same score. Exams . The midterm exam will be held on Friday, March 10 from 7-9pm PT. Please note the date and time carefully. The final exam is required for a passing grade, and will be held on Tuesday, May 9 from 3-6pm PT. There will be one alternate exam for the midterm and the final exam, for those with exam conflicts. The alternate midterm exam will take place online 8-10AM PT on Saturday, March 11 and the alternate final exam will take place online 7-10PM PT on Tuesday, May 9. If you cannot make either the regular or alternative times, please contact data8@berkeley.edu immediately. The regular midterm and final exams will be in-person. ",
    "url": "http://localhost:4000/su23/policies/#course-components",
    "relUrl": "/policies/#course-components"
  },"38": {
    "doc": "Policies",
    "title": "Grades",
    "content": "Grades will be assigned using the following weighted components. Every assignment is weighted equally in its category. For example, there are 3 projects, so each project is worth (25 / 3)% = 8.3% of your grade. | Activity | Grade | . | Lab Credit | 10% | . | Homeworks | 20% | . | Projects | 25% | . | Midterm | 15% | . | Final | 30% | . In past semesters of Data 8, more than 40% of the students received grades in the A+/A/A- range and more than 35% received grades in the B+/B/B- range. Grade Bins . This semester, we will use grade bins to determine the lowest possible letter grade based on final composite scores (where each grade component is weighted according to above table). While we will not raise these bins, we may lower them. The table below contains the grade bins for this semester. For example, final composite scores between 80% (inclusive) and 90% (exclusive) will receive grades of at least B+/B/B-. | Composite Score (%) Range | Grade Range | . | [90, 100] | A | . | [80, 90) | B | . | [65, 80) | C | . Regrades . Grades for Homeworks, Projects, and Labs will be posted on Gradescope about 1 week after the assignment’s due date. Solutions to the assignment and common mistakes will also be posted on Ed. It is up to you to check the solutions and request a regrade request before the regrade deadline (typically 5 days after grade release). Regrade requests can be made on Gradescope. Any regrade request past the deadline will not be looked at; this is to enforce the same deadline across all students, so please do not delay in reviewing your work. For the midterm exam, there will be a regrade request submission window. Please review the solutions and common mistakes before submitting a regrade request. Requests where a rubric item was incorrectly selected or not selected will be reviewed, but any regrade requests that ask to change the rubric or for partial credit will be ignored. ",
    "url": "http://localhost:4000/su23/policies/#grades",
    "relUrl": "/policies/#grades"
  },"39": {
    "doc": "Policies",
    "title": "Assignments",
    "content": "Submitting Assignments . All assignments (homework, labs, and projects) will be submitted on Gradescope. Please refer to this tutorial for submitting assignments. Late Submission . The deadline for all assignments in this course is 11 PM PST. Assignments submitted less than an hour after the deadline will not be marked as late. Homework and lab submissions after this time will not be accepted. Instructions on how to request an assignment extension are on the accommodations page. Your two lowest homework scores and two lowest lab scores will be dropped in the calculation of your overall grade. If you have an ongoing situation that prevents you from completing course content, please contact your lab TA. Projects will be accepted up to 2 days (48 hours) late. Projects submitted fewer than 24 hours after the deadline will receive 2/3 credit, and projects submitted between 24 and 48 hours after the deadline will receive 1/3 credit. Projects submitted 48 hours or more after the deadline will receive no credit. Assignment Extensions . We understand that life happens and want to provide you with the support you need. If you need to request an extension, please fill out this form. Submissions to this form will be visible only to the course instructors, the DSP Lead and Grading Leads. Learning Cooperatively . We encourage you to discuss course content with your friends and classmates as you are working on your assignments. No matter your academic background, you will learn more if you work alongside others than if you work alone. Ask questions, answer questions, and share ideas liberally. If some emergency takes you away from the course for an extended period, or if you decide to drop the course for any reason, please don’t just disappear silently! You should inform your lab TA and your project partner (if you have one) immediately, so that nobody is expecting you to do something you can’t finish. ",
    "url": "http://localhost:4000/su23/policies/#assignments",
    "relUrl": "/policies/#assignments"
  },"40": {
    "doc": "Policies",
    "title": "Academic Honesty",
    "content": "You must write your answers in your own words, and you must not share your completed work. The exception to this rule is that you can share everything related to a project with your project partner (if you have one) and turn in one project between the two of you, and if you are attending a lab session and have a lab partner you can share everything related to that lab with your lab partner. Make a serious attempt at every assignment yourself. If you get stuck, read the textbook and go over the lectures and lab discussion. After that, go ahead and discuss any remaining doubts with others, especially the course staff. That way you will get the most out of the discussion. It is important to keep in mind the limits to collaboration. As noted above, you and your friends are encouraged to discuss course content and approaches to problem solving. But you are not allowed to share your code or answers with other students. Doing so is considered academic misconduct, and it doesn’t help them either. It sets them up for trouble on upcoming assignments and on the exams. In addition, posting course content such as homeworks, projects, and exams on any 3rd party websites or submitting your own answers on outside sites/forums is considered academic misconduct. You are also not permitted to turn in answers or code that you have obtained from others. Not only does such copying count as academic misconduct, it circumvents the pedagogical goals of an assignment. You must solve problems with the resources made available in the course. You should never look at or have in your possession solutions from another student or another semester. Please read Berkeley’s Code of Conduct carefully. Penalties for academic misconduct in Data 8 are severe and include reporting to the Center for Student Conduct. They might also include a F in the course or even dismissal from the university. It’s just not worth it! . When you need help, reach out to the course staff using Ed, in office hours, and/or during labs. You are not alone in Data 8! Instructors and staff are here to help you succeed. We expect that you will work with integrity and with respect for other members of the class, just as the course staff will work with integrity and with respect for you. Finally, know that it’s normal to struggle. Berkeley has high standards, which is one of the reasons its degrees are valued. Everyone struggles even though many try not to show it. Even if you don’t learn everything that’s being covered, you’ll be able to build on what you do learn, whereas if you cheat you’ll have nothing to build on. You aren’t expected to be perfect; it’s ok not to get an A. ",
    "url": "http://localhost:4000/su23/policies/#academic-honesty",
    "relUrl": "/policies/#academic-honesty"
  },"41": {
    "doc": "Policies",
    "title": "A Parting Thought",
    "content": "The main goal of the course is that you should learn, and have a fantastic experience doing so. Please keep that goal in mind throughout the semester. Welcome to Data 8! . ",
    "url": "http://localhost:4000/su23/policies/#a-parting-thought",
    "relUrl": "/policies/#a-parting-thought"
  },"42": {
    "doc": "Python Reference",
    "title": "Python Reference",
    "content": "Created by Nishant Kheterpal and Jessica Hu . ",
    "url": "http://localhost:4000/su23/reference/",
    "relUrl": "/reference/"
  },"43": {
    "doc": "Python Reference",
    "title": "Table of Contents",
    "content": ". | Table Functions and Methods | String Methods | Array Functions and Methods | Table.where Predicates | Miscellaneous Functions | . ",
    "url": "http://localhost:4000/su23/reference/#table-of-contents",
    "relUrl": "/reference/#table-of-contents"
  },"44": {
    "doc": "Python Reference",
    "title": "Table Functions and Methods",
    "content": "In the examples in the left column, np refers to the NumPy module, as usual. Everything else is a function, a method, an example of an argument to a function or method, or an example of an object we might call the method on. For example, tbl refers to a table, array refers to an array, and num refers to a number. array.item(0) is an example call for the method item, and in that example, array is the name previously given to some array. | Name | Description | Input | Output | . | Table() | Create an empty table, usually to extend with data (Ch 6) | None | An empty Table | . | Table().read_table(filename) | Create a table from a data file (Ch 6) | string: the name of the file | Table with the contents of the data file | . | tbl.with_columns(name, values) tbl.with_columns(n1, v1, n2, v2,...) | A table with an additional or replaced column or columns. name is a string for the name of a column, values is an array (Ch 6) | 1. string: the name of the new column; 2. array: the values in that column | Table: a copy of the original Table with the new columns added | . | tbl.column(column_name_or_index) | The values of a column (an array) (Ch 6) | string or int: the column name or index | array: the values in that column | . | tbl.num_rows | Compute the number of rows in a table (Ch 6) | None | int: the number of rows in the table | . | tbl.num_columns | Compute the number of columns in a table (Ch 6) | None | int: the number of columns in the table | . | tbl.labels | Lists the column labels in a table (Ch 6) | None | array: the names of each column (as strings) in the table | . | tbl.select(col1, col2, ...) | Create a copy of a table with only some of the columns. Each column is the column name or index. (Ch 6) | string or int: column name(s) or index(es) | Table with the selected columns | . | tbl.drop(col1, col2, ...) | Create a copy of a table without some of the columns. Each column is the column name or index. (Ch 6) | string or int: column name(s) or index(es) | Table without the selected columns | . | tbl.relabeled(old_label, new_label) | Creates a new table, changing the column name specified by the old label to the new label, and leaves the original table unchanged. (Ch 6) | 1. string: the old column name 2. string: the new column name | Table: a new Table | . | tbl.show(n) | Display n rows of a table. If no argument is specified, defaults to displaying the entire table. (Ch 6.1) | (Optional) int: number of rows you want to display | None: displays a table with n rows | . | tbl.sort(column_name_or_index) | Create a copy of a table sorted by the values in a column. Defaults to ascending order unless descending = True is included. (Ch 6.1) | 1. string or int: column index or name 2. (Optional) descending=True | Table: a copy of the original with the column sorted | . | tbl.where(column, predicate) | Create a copy of a table with only the rows that match some predicate. See Table.where predicates below. (Ch 6.2) | 1. string or int: column name or index 2. are.(...) predicate | Table: a copy of the original table with only the rows that match the predicate | . | tbl.take(row_indices) | A table with only the rows at the given indices. row_indices is either an array of indices or an integer corresponding to one index. (Ch 6.2) | array of ints: the indices of the rows to be included in the Table OR int: the index of the row to be included | Table: a copy of the original table with only the rows at the given indices | . | tbl.scatter(x_column, y_column) | Draws a scatter plot consisting of one point for each row of the table. Note that x_column and y_column must be strings specifying column names. Include optional argument fit_line=True if you want to draw a line of best fit for each set of points. (Ch 7) | 1. string: name of the column on the x-axis 2. string: name of the column on the y-axis 3. (Optional) fit_line=True | None: draws a scatter plot | . | tbl.plot(x_column, y_column) tbl.plot(x_column) | Draw a line graph consisting of one point for each row of the table. If you only specify one column, it will plot the rest of the columns on the y-axis as different colored lines. (Ch 7) | 1. string: name of the column on the x-axis 2. string: name of the column on the y-axis | None: draws a line graph | . | tbl.barh(categories) tbl.barh(categories, values) | Displays a bar chart with bars for each category in a column, with height proportional to the corresponding frequency. values argument unnecessary if table has only a column of categories and a column of values. (Ch 7.1) | 1. string: name of the column with categories 2. (Optional) string: the name of the column with values for corresponding categories | None: draws a bar chart | . | tbl.hist(column, unit, bins, group) | Generates a histogram of the numerical values in a column. unit and bins are optional arguments, used to label the axes and group the values into intervals (bins), respectively. Bins have the form [a, b), where a is included in the bin and b is not. (Ch 7.2) | 1. string: name of the column with categories 2. (Optional) string: units of x-axis 3. (Optional) array of ints/floats denoting bin boundaries 4. (Optional) string: name of categorical column to draw separate overlaid histograms for | None: draws a histogram | . | tbl.bin(column_name_or_index) tbl.bin(column_name_or_index, bins) | Groups values into intervals, known as bins. Results in a two-column table that contains the number of rows in each bin. The first column lists the left endpoints of the bins, except in the last row. If the bins argument isn’t used, default is to produce 10 equally wide bins between the min and max values of the data. (Ch 7.2) | 1. string or int: column name(s) or index(es) 2. (Optional) array of ints/floats denoting bin boundaries or an int of the number of bins you want | Table: a new tables | . | tbl.apply(function) tbl.apply(function, col1, col2, ...) | Returns an array of values resulting from applying a function to each item in a column. (Ch 8.1) | 1. function: function to apply to column 2. (Optional) string: name of the column to apply function to (if you have multiple columns, the respective column’s values will be passed as the corresponding argument to the function), and if there is no argument, your function will be applied to every row object in tbl | array: contains an element for each value in the original column after applying the function to it | . | tbl.group(column_or_columns, func) | Group rows by unique values or combinations of values in a column(s). Multiple columns must be entered in array or list form. Other values aggregated by count (default) or optional argument func. (Ch 8.2) | 1. string or array of strings: column(s) on which to group 2. (Optional) function: function to aggregate values in cells (defaults to count) | Table: a new Table | . | tbl.pivot(col1, col2, values, collect) tbl.pivot(col1, col2) | A pivot table where each unique value in col1 has its own column and each unique value in col2 has its own row. Count or aggregate values from a third column, collect with some function. Default values and collect return counts in cells. (Ch 8.3) | 1. string: name of column whose unique values will make up columns of pivot table 2. string: name of column whose unique values will make up rows of pivot table 3. (Optional) string: name of column that describes the values of cell 4. (Optional) function: how the values are collected, e.g. sum or np.mean | Table: a new Table | . | tblA.join(colA, tblB, colB) tblA.join(colA, tblB) | Generate a table with the columns of tblA and tblB, containing rows for all values of a column that appear in both tables. Default colB is colA. colA and colB must be strings specifying column names. (Ch 8.4) | 1. string: name of a column in tblA with values to join on 2. Table: other Table 3. (Optional) string: if column names are different between Tables, the name of the shared column in tblB | Table: a new Table | . | tbl.sample(n) tbl.sample(n, with_replacement) | A new table where n rows are randomly sampled from the original table; by default, n=tbl.num_rows. Default is with replacement. For sampling without replacement, use argument with_replacement=False. For a non-uniform sample, provide a third argument weights=distribution where distribution is an array or list containing the probability of each row. (Ch 10) | 1. int: sample size 2. (Optional) with_replacement=True | Table: a new Table with n rows | . | tbl.row(row_index) | Accesses the row of a table by taking the index of the row as its argument. Note that rows are in general not arrays, as their elements can be of different types. However, you can use .item to access a particular element of a row using row.item(label). (Ch 17.3) | int: row index | Row object with the values of the row and labels of the corresponding columns | . | tbl.rows | Can use to access all of the rows of a table. | None | Rows object made up of all rows as individual row objects | . ",
    "url": "http://localhost:4000/su23/reference/#table-functions-and-methods",
    "relUrl": "/reference/#table-functions-and-methods"
  },"45": {
    "doc": "Python Reference",
    "title": "String Methods",
    "content": "| Name | Description | . | str.split(separator) | Splits the string (str) into a list based on the separator that is passed in | . | str.join(array) | Combines each element of array into one string, with str being in-between each element | . | str.replace(old_string, new_string) | Replaces each occurrence of old_string in str with the value of new_string (Ch 4.2.1) | . ",
    "url": "http://localhost:4000/su23/reference/#string-methods",
    "relUrl": "/reference/#string-methods"
  },"46": {
    "doc": "Python Reference",
    "title": "Array Functions and Methods",
    "content": "| Name | Chapter | Description | . | max(array) | 3.3 | Returns the maximum value of an array | . | min(array) | 3.3 | Returns the minimum value of an array | . | sum(array) | 3.3 | Returns the sum of the values in an array | . | abs(num), np.abs(array) | 3.3 | Takes the absolute value of a number or each number in an array | . | round(num), np.round(array) | 3.3 | Rounds a number or an array of numbers to the nearest integer | . | len(array) | 3.3 | Returns the length (number of elements) of an array | . | make_array(val1, val2, ...) | 5 | Makes a numpy array with the values passed in | . | np.average(array) np.mean(array) | 5.1 | Returns the mean value of an array | . | np.std(array) | 14.2 | Returns the standard deviation of an array | . | np.diff(array) | 5.1 | Returns a new array of size len(arr)-1 with elements equal to the difference between adjacent elements; val_2 - val_1, val_3 - val_2, etc. | . | np.sqrt(array) | 5.1 | Returns an array with the square root of each element | . | np.arange(start, stop, step) np.arange(start, stop) np.arange(stop) | 5.2 | An array of numbers starting with start, going up in increments of step, and going up to but excluding stop. When start and/or step are left out, default values are used in their place. Default step is 1; default start is 0. | . | array.item(index) | 5.3 | Returns the i-th item in an array (remember Python indices start at 0!) | . | np.random.choice(array, n) np.random.choice(array) | 9 | Picks one (by default) or some number (n) of items from array at random with replacement. | . | np.count_nonzero(array) | 9 | Returns the number of non-zero (or True) elements in an array. | . | np.append(array, item) | 9.2 | Returns a copy of the input array with item (must be the same type as the other entries in the array) appended to the end. | . | percentile(percentile, array) | 13.1 | Returns the corresponding percentile of an array. | . ",
    "url": "http://localhost:4000/su23/reference/#array-functions-and-methods",
    "relUrl": "/reference/#array-functions-and-methods"
  },"47": {
    "doc": "Python Reference",
    "title": "Table.where Predicates",
    "content": "Any of these predicates can be negated by adding not_ in front of them, e.g. are.not_equal_to(Z) or are.not_containing(S). | Predicate | Description | . | are.equal_to(Z) | Equal to Z | . | are.not_equal_to(Z) | Not equal to Z | . | are.above(x) | Greater than x | . | are.above_or_equal_to(x) | Greater than or equal to x | . | are.below(x) | Less than x | . | are.below_or_equal_to(x) | Less than or equal to x | . | are.between(x, y) | Greater than or equal to x and less than y | . | are.between_or_equal_to(x, y) | Greater than or equal to x, and less than or equal to y | . | are.strictly_between(x, y) | Greater than x and less than y | . | are.contained_in(A) | Is a substring of A (if A is a string) or an element of A (if A is a list/array) | . | are.containing(S) | Contains the string S | . ",
    "url": "http://localhost:4000/su23/reference/#tablewhere-predicates",
    "relUrl": "/reference/#tablewhere-predicates"
  },"48": {
    "doc": "Python Reference",
    "title": "Miscellaneous Functions",
    "content": "These are functions in the datascience library that are used in the course that don’t fall into any of the categories above. You can also read more about all functions in the datascience library on the datascience documentation. | Name | Description | Intput | Output | . | sample_proportions(sample_size, model_proportions) | sample_size should be an integer, model_proportions an array of probabilities that sum up to 1. The function samples sample_size objects from the distribution specified by model_proportions. It returns an array with the same size as model_proportions. Each item in the array corresponds to the proportion of times it was sampled out of the sample_size times. (Ch 11.1) | 1. int: sample size 2. array: an array of proportions that should sum to 1 | array: each item corresponds to the proportion of times that corresponding item was sampled from model_proportions in sample_size draws, should sum to 1 | . | minimize(function) | Returns an array of values such that if each value in the array was passed into function as arguments, it would minimize the output value of function. (Ch 15.4) | function: name of a function that will be minimized | array: An array in which each element corresponds to an argument that minimizes the output of the function. Values in the array are listed based on the order they are passed into the function; the first element in the array is also going to be the first value passed into the function. | . ",
    "url": "http://localhost:4000/su23/reference/#miscellaneous-functions",
    "relUrl": "/reference/#miscellaneous-functions"
  },"49": {
    "doc": "Resources",
    "title": "Resources",
    "content": " ",
    "url": "http://localhost:4000/su23/resources/",
    "relUrl": "/resources/"
  },"50": {
    "doc": "Resources",
    "title": "Table of Contents",
    "content": ". | Materials . | Student Materials Folder | Guides | Table Resources | . | Exam Resources . | Study Guides | Past Exams | . | Supplemental Videos | Wellness Resources | . ",
    "url": "http://localhost:4000/su23/resources/#table-of-contents",
    "relUrl": "/resources/#table-of-contents"
  },"51": {
    "doc": "Resources",
    "title": "Materials",
    "content": "Student Materials Folder . We will post student materials in this folder throughout the semester. Guides . | Arrays Primer | Tabular Thinking | Confidence Intervals | JupyterHub Tips | Sampling Methods | Table Functions | Hypothesis Testing | . Table Resources . | Table Function Visualizer | . ",
    "url": "http://localhost:4000/su23/resources/#materials",
    "relUrl": "/resources/#materials"
  },"52": {
    "doc": "Resources",
    "title": "Exam Resources",
    "content": "Study Guides . | The midterm study guide will be distributed with the midterm exam. | The final study guide will be distributed with the final exam. | . Past Exams . Exams and practice exams from previous semesters can be found below. These exams may differ slightly in terms of material covered and syntax used, as the datascience module has changed over time. Midterms: . | Spring 2023 Midterm / Solutions (Coming Soon) | Fall 2022 Midterm / Solutions | Spring 2022 Midterm / Solutions | Fall 2021 Midterm / Solutions | Spring 2021 Midterm / Solutions | Fall 2020 Midterm / Solutions | Spring 2020 Midterm / Solutions | Fall 2019 Midterm / Solutions | Spring 2019 Midterm / Solutions | Fall 2018 Midterm / Solutions | Spring 2018 Midterm / Solutions | Fall 2017 Midterm / Solutions | Fall 2017 Practice Midterm / Solutions | Summer 2017 Midterm / Solutions | Fall 2016 Midterm | . Finals: . | Spring 2023 Final / Solutions Coming Soon | Fall 2022 Final / Solutions | Spring 2022 Final / Solutions | Fall 2021 Final / Solutions | Spring 2021 Final / Solutions | Fall 2020 Final / Solutions | Spring 2020 Final / Solutions / Explanations | Fall 2019 Final / Solutions | Spring 2019 Final / Solutions | Fall 2018 Final / Solutions | Spring 2018 Final / Solutions | Fall 2017 Final / Solutions | Spring 2017 Final / Solutions | Spring 2017 Practice Final / Solutions | Fall 2016 Final / Solution | . ",
    "url": "http://localhost:4000/su23/resources/#exam-resources",
    "relUrl": "/resources/#exam-resources"
  },"53": {
    "doc": "Resources",
    "title": "Supplemental Videos",
    "content": ". | Group Animation | Pivot Animation | . ",
    "url": "http://localhost:4000/su23/resources/#supplemental-videos",
    "relUrl": "/resources/#supplemental-videos"
  },"54": {
    "doc": "Resources",
    "title": "Wellness Resources",
    "content": "Your wellbeing matters, and we hope that Data 8 is never a barrier to taking care of your mental and physical health. Below are some campus resources that may be helpful: . | University Health Services | UHS Counseling and Psychological Services (CAPS) | Campus Academic Accommodations Hub | ASUC Student Advocate’s Office | Basic Needs Center | ASUC Mental Health Resources Guide | . ",
    "url": "http://localhost:4000/su23/resources/#wellness-resources",
    "relUrl": "/resources/#wellness-resources"
  },"55": {
    "doc": "Staff",
    "title": "Staff",
    "content": " ",
    "url": "http://localhost:4000/su23/staff/",
    "relUrl": "/staff/"
  },"56": {
    "doc": "Staff",
    "title": "Instructors",
    "content": " ",
    "url": "http://localhost:4000/su23/staff/#instructors",
    "relUrl": "/staff/#instructors"
  },"57": {
    "doc": "Staff",
    "title": "Lead GSIs",
    "content": "All office hours are held in-person in Warren 101 unless otherwise specified . ",
    "url": "http://localhost:4000/su23/staff/#lead-gsis",
    "relUrl": "/staff/#lead-gsis"
  },"58": {
    "doc": "Staff",
    "title": "Teaching Assistants (GSIs)",
    "content": "All office hours are held in-person in Warren 101 unless otherwise specified . ",
    "url": "http://localhost:4000/su23/staff/#teaching-assistants-gsis",
    "relUrl": "/staff/#teaching-assistants-gsis"
  },"59": {
    "doc": "Staff",
    "title": "Tutors",
    "content": " ",
    "url": "http://localhost:4000/su23/staff/#tutors",
    "relUrl": "/staff/#tutors"
  }
}
